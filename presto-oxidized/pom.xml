<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>com.facebook.presto</groupId>
        <artifactId>presto-root</artifactId>
        <version>0.286-SNAPSHOT</version>
    </parent>

    <artifactId>presto-oxidized</artifactId>
    <name>presto-oxidized</name>
    <description>Presto Worker Implementation in Rust</description>

    <properties>
        <air.main.basedir>${project.parent.basedir}</air.main.basedir>
        <air.checkstyle.config-file>src/checkstyle/presto-checks.xml</air.checkstyle.config-file>
    </properties>
    <dependencies>
        <dependency>
            <groupId>com.facebook.presto</groupId>
            <artifactId>presto-main</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.facebook.presto</groupId>
            <artifactId>presto-tpch</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.facebook.airlift</groupId>
            <artifactId>log</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.facebook.airlift</groupId>
            <artifactId>log-manager</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.facebook.presto</groupId>
            <artifactId>presto-iceberg</artifactId>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>com.facebook.presto.hive</groupId>
                    <artifactId>hive-apache</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.github.ben-manes.caffeine</groupId>
                    <artifactId>caffeine</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.facebook.presto</groupId>
            <artifactId>presto-tests</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.facebook.presto</groupId>
            <artifactId>presto-jmx</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <forkCount>1</forkCount>
                    <reuseForks>false</reuseForks>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.basepom.maven</groupId>
                <artifactId>duplicate-finder-maven-plugin</artifactId>
                <configuration>
                    <ignoredResourcePatterns>
                        <ignoredResourcePattern>parquet.thrift</ignoredResourcePattern>
                        <ignoredResourcePattern>iceberg-build.properties</ignoredResourcePattern>
                        <ignoredResourcePattern>about.html</ignoredResourcePattern>
                        <ignoredResourcePattern>mozilla/public-suffix-list.txt</ignoredResourcePattern>
                    </ignoredResourcePatterns>
                    <ignoredClassPatterns>
                        <ignoredClassPattern>module-info</ignoredClassPattern>
                        <ignoredClassPattern>META-INF.versions.9.module-info</ignoredClassPattern>
                    </ignoredClassPatterns>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>remove-virtualenv</id>
                        <phase>clean</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>rm</executable>
                            <arguments>
                                <argument>-rf</argument>
                                <argument>env/</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>check for virtualenv</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>virtualenv</executable>
                            <arguments>
                                <argument>--version</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>check for jq</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>jq</executable>
                            <arguments>
                                <argument>--version</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>check for cargo</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>cargo</executable>
                            <arguments>
                                <argument>version</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>create-virtualenv</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <!-- set this to false to prevent bug - See https://github.com/mojohaus/exec-maven-plugin/issues/75 -->
                            <longModulepath>false</longModulepath>
                            <executable>virtualenv</executable>
                            <arguments>
                                <argument>-p</argument>
                                <argument>python3</argument>
                                <argument>env</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>install python dependencies</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>env/bin/python</executable>
                            <arguments>
                                <argument>-m</argument>
                                <argument>pip</argument>
                                <argument>install</argument>
                                <argument>pyyaml</argument>
                                <argument>chevron</argument>
                                <argument>regex</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>generate protocol</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>bash</executable>
                            <arguments>
                                <argument>-c</argument>
                                <argument>source env/bin/activate &amp;&amp; pushd ${project.parent.basedir}/presto-native-execution/presto_cpp/presto_protocol &amp;&amp; make presto_protocol.rs</argument>
                            </arguments>
                            <environmentVariables>
                                <PRESTO_HOME>${project.parent.basedir}/</PRESTO_HOME>
                            </environmentVariables>
                        </configuration>
                    </execution>
                    <execution>
                        <id>compile server</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <workingDirectory>${basedir}/prestox</workingDirectory>
                            <executable>cargo</executable>
                            <arguments>check</arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>build server</id>
                        <phase>install</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <workingDirectory>${basedir}/prestox</workingDirectory>
                            <executable>cargo</executable>
                            <arguments>build</arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>run tests</id>
                        <phase>test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <skip>${skipTests}</skip>
                            <workingDirectory>${basedir}/prestox</workingDirectory>
                            <executable>cargo</executable>
                            <arguments>test</arguments>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
